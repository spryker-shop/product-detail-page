{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 10
} %}

{% set brand = data.product.attributes.brand | default %}
{% set sku = data.product.sku %}
{% set availabilityWidget = '' %}
{% set isProductAbstract = data.product.idProductConcrete is empty %}
{% set isDisabled = data.product.idProductConcrete is empty or data.product.price is empty %}
{% set isProductAvailable = true %}

{% if widgetExists('AvailabilityWidgetPlugin') %} {# @deprecated Use molecule('availability-product', 'AvailabilityWidget') instead of AvailabilityWidgetPlugin. #}
    {% set isAvailable = widgetBlock('AvailabilityWidgetPlugin', 'isAvailable', data.product) %}
    {% set isDisabled = not isAvailable or isDisabled %}
{% else %}
    {% set isAvailable = data.product.idProductConcrete and data.product.available %}
    {% set isDisabled = not isAvailable or isDisabled %}
{% endif %}

{% set productDiscontinuedNoteWidget = findWidget('ProductDiscontinuedNoteWidget', [sku]) %}
{% set isDiscontinued = productDiscontinuedNoteWidget.isDiscontinued ?? widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', sku) %} {# @deprecated Use productDiscontinuedNoteWidget instead of ProductDiscontinuedWidgetPlugin. #}
{% if isDiscontinued is not null %}
    {% set isDisabled = isDiscontinued or isDisabled %}
    {% set isProductAvailable = not isDiscontinued %}
{% endif %}

{% block body %}
    {% if brand is not empty %}
        <h5><small>{{'page.product.by' | trans}}</small> {{brand}}</h5>
    {% endif %}
    <small>{{ 'product.attribute.sku' | trans }}: {{sku}}</small>

    <hr />
    {% widget 'ProductPriceVolumeWidget' args [data.product] only %}
    {% elsewidget 'PriceProductVolumeWidgetPlugin' args [data.product] only %} {# @deprecated Use ProductPriceVolumeWidget instead. #}
    {% nowidget %}
        {% if widgetExists('PriceWidgetPlugin') %}
            {{ widget('PriceWidgetPlugin', data.product) }}  {# @deprecated Use molecule('price') instead. #}
        {% else %}
            <p>
                {% include molecule('price') with {
                    data: {
                        amount: data.product.price | money,
                        originalAmount: data.product.prices.ORIGINAL | default
                    }
                } only %}
            </p>
        {% endif %}
    {% endwidget %}

    {% widget 'ProductDetailPageReviewWidget' args [data.product.idProductAbstract] use view('pdp-review-rating', 'ProductReviewWidget') only %}
    {% nowidget %}
        {{ widgetBlock('ProductReviewWidgetPlugin', 'rating', data.product.idProductAbstract) }} {# @deprecated Use ProductDetailPageReviewWidget instead. #}
    {% endwidget %}

    {% block product_group_widget %}
        {% widget 'ProductGroupWidget' args [data.product.idProductAbstract] only %}
        {% elsewidget 'ProductGroupWidgetPlugin' args [data.product.idProductAbstract] only %} {# @deprecated Use ProductGroupWidget instead. #}
        {% endwidget %}
    {% endblock %}

    {% embed molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}
        {% block body %}<hr />{{parent()}}{% endblock %}
    {% endembed %}

    <hr />
    <form method="POST" class="{{ config.jsName }}__form" action="{{ path("cart/add", {"sku": sku}) }}">
        {% widget 'ProductOptionConfiguratorWidget' args [data.product] only %}
        {% elsewidget 'ProductOptionWidgetPlugin' args [data.product] only %} {# @deprecated Use ProductOptionConfiguratorWidget instead. #}
        {% endwidget %}

        {% if can('SeeAddToCartPermissionPlugin') %}
            {% widget 'ProductPackagingUnitWidget' args [data.product, isDisabled] only %}
            {% elsewidget 'ProductPackagingUnitWidgetPlugin' args [data.product, isDisabled] only %} {# @deprecated Use ProductPackagingUnitWidget instead. #}
            {% elsewidget 'ManageProductMeasurementUnitWidget' args [data.product, isDisabled] only %}
            {% elsewidget 'ProductMeasurementUnitWidgetPlugin' args [data.product, isDisabled] only %} {# @deprecated Use ManageProductMeasurementUnitWidget instead. #}
            {% nowidget %}
                <div class="grid grid--bottom grid--justify">
                    <div class="col col--sm-5">
                        {% include molecule('quantity-input') with {
                            data: {
                                value: data.value,
                                readOnly: isDisabled,
                                hasUpdateButton: false,
                                maxQuantity: data.maxQuantity
                            }
                        } only %}
                    </div>

                    <div class="col col--sm-6">
                        <button type="submit" class="button button--success button--expand" {{ isDisabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;" {{qa('add-to-cart-button')}}>
                            {% include atom('icon') with {
                                data: {
                                    name: 'cart-plus'
                                }
                            } only %}
                            {{ 'page.detail.add-to-cart' | trans }}
                        </button>
                    </div>
                </div>
            {% endwidget %}
        {% endif %}

        {% widget 'AddToMultiCartWidget' args [isDisabled] only %}
        {% elsewidget 'MultiCartWidgetPlugin' args [data.product, isDisabled] only %} {# @deprecated Use AddToMultiCartWidget instead. #}
        {% endwidget %}

        {% if widgetExists('AvailabilityWidgetPlugin') %}
            {{ widget('AvailabilityWidgetPlugin', data.product) }} {# @deprecated Use molecule('availability-product', 'AvailabilityWidget') instead. #}
        {% else %}
            {% include molecule('availability-product', 'AvailabilityWidget') ignore missing with {
                data: {
                    idProductConcrete: data.product.idProductConcrete,
                    isAvailable: data.product.available
                }
            } only %}
        {% endif %}
    </form>

    {% if not isAvailable and not isProductAbstract %}
        {% widget 'AvailabilityNotificationSubscriptionWidget' args [data.product] only %}{% endwidget %}
    {% endif %}

    {% if can('SeeShoppingListPermissionPlugin') and isProductAvailable %}
        {% widget 'AddToShoppingListWidget' args [sku, isDisabled] only %}
            {% block body %}
                <hr />
                {{ parent() }}
            {% endblock %}
        {% elsewidget 'ShoppingListWidgetPlugin' args [sku, isDisabled] only %} {# @deprecated Use AddToShoppingListWidget instead. #}
            {% block body %}
                <hr />
                {{ parent() }}
            {% endblock %}
        {% endwidget %}
    {% endif %}

    {% if can('SeeWishlistPermissionPlugin') and isProductAvailable %}
        {% if widgetExists('WishlistWidgetPlugin') %}
            <hr />
            {{ widget('WishlistWidgetPlugin', data.product) }} {# @deprecated Use molecule('wishlist-selector', 'WishlistWidget') instead. #}
        {% else %}
            {% include molecule('wishlist-selector-for-pdp', 'WishlistWidget') ignore missing with {
                data: {
                    sku: data.product.sku,
                    idProductConcrete: data.product.idProductConcrete | default
                }
            } only %}
        {% endif %}
    {% endif %}

    {% widget 'ProductDiscontinuedNoteWidget' args [sku] only %}
    {% elsewidget 'ProductDiscontinuedWidgetPlugin' args [sku] only %} {# @deprecated Use ProductDiscontinuedNoteWidget instead. #}
    {% endwidget %}

{% endblock %}
