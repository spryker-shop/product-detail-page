{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 10
} %}

{% set options = [] %}
{% set brand = data.product.attributes.brand | default(null) %}
{% set sku = data.product.sku %}
{% set availabilityWidget = '' %}
{% set disabled = data.product.idProductConcrete is empty or data.product.price is empty %}

{% for index in 1..data.maxQuantity %}
    {% set options = options | merge([{
        label: index,
        value: index
    }]) %}
{% endfor %}

{% if widgetExists('AvailabilityWidgetPlugin') %}
    {% set isAvailable = widgetBlock('AvailabilityWidgetPlugin', 'isAvailable', data.product) %}
    {% set disabled = not isAvailable or disabled %}
{% endif %}

{% block body %}
    {% if brand is not empty %}
        <h5><small>{{'page.product.by' | trans}}</small> {{brand}}</h5>
    {% endif %}
    <small>{{ 'product.attribute.sku' | trans }}: {{sku}}</small>

    <hr />

    {{ widget('PriceWidgetPlugin', data.product) }}
    {# {{ widgetBlock('ProductReviewWidgetPlugin', 'rating', data.product.idProductAbstract) }} #}
    {% embed molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}
        {% block body %}<hr />{{parent()}}{% endblock %}
    {% endembed %}
    {# {{ widget('ProductGroupWidgetPlugin', data.product.idProductAbstract) }} #}

    <hr />

    <form method="POST" action="/cart/add/{{sku}}">
        {% if widgetExists('ProductOptionWidgetPlugin') %}
            {{ widget('ProductOptionWidgetPlugin', data.product) }}
            <hr />
        {% endif %}

        <div class="grid grid--justify grid--bottom">
            {% if widgetExists('ProductMeasurementUnitWidgetPlugin') %}
                {{ widget('ProductMeasurementUnitWidgetPlugin', data.product, options) }}
            {% else %}
                <div class="col col--sm-5">
                    <label>
                        {{'cart.item_quantity' | trans}}
                        {% include atom('select') with {
                            modifiers: ['expand'],
                            data: {
                                options: options
                            },
                            attributes: {
                                name: 'quantity'
                            }
                        } only %}
                    </label>
                </div>

                <div class="col col--sm-6">
                    {% if widgetExists('MultiCartWidgetPlugin') %}
                        {{ widget('MultiCartWidgetPlugin', data.product, disabled) }}
                    {% else %}
                        <button type="submit" class="button button--success button--expand" {{ disabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;" {{qa('add-to-cart-button')}}">
                            {% include atom('icon') with {
                                data: {
                                    name: 'cart-plus'
                                }
                            } only %}
                            {{ 'page.detail.add-to-cart' | trans }}
                        </button>
                    {% endif %}
                </div>
            {% endif %}
        </div>

        {{ widget('AvailabilityWidgetPlugin', data.product) }}
    </form>

    {% if widgetExists('ShoppingListWidgetPlugin') %}
        <hr/>
        {{ widget('ShoppingListWidgetPlugin', sku, disabled) }}
    {% endif %}

     {#{{ widget('WishlistWidgetPlugin', data.product) }}#}
{% endblock %}
